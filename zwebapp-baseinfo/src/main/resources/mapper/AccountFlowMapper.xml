<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scnu.zwebapp.baseinfo.mapper.AccountFlowMapper">
  <resultMap id="BaseResultMap" type="com.scnu.zwebapp.baseinfo.bean.AccountFlow">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="flow_id" jdbcType="VARCHAR" property="flowId" />
    <result column="relat_flow_id" jdbcType="VARCHAR" property="relatFlowId" />
    <result column="src_acc_id" jdbcType="INTEGER" property="srcAccId" />
    <result column="dest_acc_id" jdbcType="INTEGER" property="destAccId" />
    <result column="cate_id2" jdbcType="INTEGER" property="cateId2" />
    <result column="cate_id1" jdbcType="INTEGER" property="cateId1" />
    <result column="otr_id1" jdbcType="INTEGER" property="otrId1" />
    <result column="otr_id2" jdbcType="INTEGER" property="otrId2" />
    <result column="otr_id3" jdbcType="INTEGER" property="otrId3" />
    <result column="flow_remark" jdbcType="VARCHAR" property="flowRemark" />
    <result column="flow_amount" jdbcType="DECIMAL" property="flowAmount" />
    <result column="flow_record_type" jdbcType="CHAR" property="flowRecordType" />
    <result column="flow_flag_type" jdbcType="CHAR" property="flowFlagType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="is_del" jdbcType="BIT" property="isDel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    `flow_id`, `relat_flow_id`, `src_acc_id`, `dest_acc_id`, `cate_id2`, `cate_id1`, 
    `otr_id1`, `otr_id2`, `otr_id3`, `flow_remark`, `flow_amount`, `flow_record_type`, 
    `flow_flag_type`, `create_time`, `is_del`
  </sql>
  <select id="selectByExample" parameterType="com.scnu.zwebapp.baseinfo.bean.AccountFlowExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from zw_account_flow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.scnu.zwebapp.baseinfo.bean.AccountFlowExample">
    <!--
      WARNING - @mbg.generated
    -->
    delete from zw_account_flow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.scnu.zwebapp.baseinfo.bean.AccountFlowExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from zw_account_flow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update zw_account_flow
    <set>
      <if test="record.flowId != null">
        `flow_id` = #{record.flowId,jdbcType=VARCHAR},
      </if>
      <if test="record.relatFlowId != null">
        `relat_flow_id` = #{record.relatFlowId,jdbcType=VARCHAR},
      </if>
      <if test="record.srcAccId != null">
        `src_acc_id` = #{record.srcAccId,jdbcType=INTEGER},
      </if>
      <if test="record.destAccId != null">
        `dest_acc_id` = #{record.destAccId,jdbcType=INTEGER},
      </if>
      <if test="record.cateId2 != null">
        `cate_id2` = #{record.cateId2,jdbcType=INTEGER},
      </if>
      <if test="record.cateId1 != null">
        `cate_id1` = #{record.cateId1,jdbcType=INTEGER},
      </if>
      <if test="record.otrId1 != null">
        `otr_id1` = #{record.otrId1,jdbcType=INTEGER},
      </if>
      <if test="record.otrId2 != null">
        `otr_id2` = #{record.otrId2,jdbcType=INTEGER},
      </if>
      <if test="record.otrId3 != null">
        `otr_id3` = #{record.otrId3,jdbcType=INTEGER},
      </if>
      <if test="record.flowRemark != null">
        `flow_remark` = #{record.flowRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.flowAmount != null">
        `flow_amount` = #{record.flowAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.flowRecordType != null">
        `flow_record_type` = #{record.flowRecordType,jdbcType=CHAR},
      </if>
      <if test="record.flowFlagType != null">
        `flow_flag_type` = #{record.flowFlagType,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null">
        `create_time` = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDel != null">
        `is_del` = #{record.isDel,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update zw_account_flow
    set `flow_id` = #{record.flowId,jdbcType=VARCHAR},
      `relat_flow_id` = #{record.relatFlowId,jdbcType=VARCHAR},
      `src_acc_id` = #{record.srcAccId,jdbcType=INTEGER},
      `dest_acc_id` = #{record.destAccId,jdbcType=INTEGER},
      `cate_id2` = #{record.cateId2,jdbcType=INTEGER},
      `cate_id1` = #{record.cateId1,jdbcType=INTEGER},
      `otr_id1` = #{record.otrId1,jdbcType=INTEGER},
      `otr_id2` = #{record.otrId2,jdbcType=INTEGER},
      `otr_id3` = #{record.otrId3,jdbcType=INTEGER},
      `flow_remark` = #{record.flowRemark,jdbcType=VARCHAR},
      `flow_amount` = #{record.flowAmount,jdbcType=DECIMAL},
      `flow_record_type` = #{record.flowRecordType,jdbcType=CHAR},
      `flow_flag_type` = #{record.flowFlagType,jdbcType=CHAR},
      `create_time` = #{record.createTime,jdbcType=TIMESTAMP},
      `is_del` = #{record.isDel,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>